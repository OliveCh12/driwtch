{"version":3,"sources":["GlobalContext.tsx","pages/Home.tsx","components/Progress.tsx","components/Button.tsx","components/Switcher.tsx","components/Header.tsx","components/Footer.tsx","pages/Starter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GlobalContext","createContext","undefined","GlobalProvider","props","useState","state","setState","Provider","value","children","Home","query","interval","handleInputChange","event","target","name","className","type","onChange","placeholder","to","Progress","div","animate","width","current","transition","Button","button","style","whileTap","scale","onClick","Switcher","useContext","currentIndex","setCurrentIndex","handleNext","length","alert","img","src","alt","initial","opacity","x","overflow","exit","icon","faArrowCircleLeft","date","Date","now","duration","renderer","total","minutes","seconds","completed","api","start","faStopwatch","autoStart","faArrowCircleRight","Header","Footer","getFullYear","Starter","useParams","isLoaded","setIsLoaded","error","setError","setData","useEffect","fetch","then","res","json","result","message","parseInt","rotate","repeat","Infinity","faFan","size","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.61ddb33a.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\ninterface Props {\n  children: any;\n}\n\nexport const GlobalContext = createContext<any | undefined>(undefined);\n\nexport const GlobalProvider = (props: Props) => {\n  const [state, setState] = useState([]);\n\n  return (\n    <GlobalContext.Provider value={[state, setState]}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport Search from \"../components/Search\";\nimport Timer from \"../components/Timer\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [state, setState] = useState({\n    query: \"\",\n    interval: 30000,\n  });\n\n  function handleInputChange(event: any) {\n    const value = event.target.value;\n    setState({ ...state, [event.target.name]: value });\n  }\n\n  return (\n    <div className=\" h-60 flex flex-col justify-center items-center\">\n      <div className=\"container m-auto px-5 text-center\">\n        <h1 className=\"font-cursive text-6xl text-primary-500\">Driwtch</h1>\n        <p className=\"dark:text-gray-300 mt-2 text-lg text-gray-500\">\n          Sketch as fast as you can...\n        </p>\n      </div>\n\n      <div className=\"container m-auto px-5 mt-5\">\n        <input\n          className=\"\"\n          type=\"text\"\n          name=\"query\"\n          value={state.query}\n          onChange={handleInputChange}\n          placeholder=\"I want to draw...\"\n        />\n        <select\n          name=\"interval\"\n          value={state.interval}\n          onChange={handleInputChange}\n        >\n          <option value={30000}>30 seconds</option>\n          <option value={60000}>1 minute</option>\n          <option value={90000}>1 minute 30</option>\n          <option value={120000}>2 minutes</option>\n          <option value={150000}>2 minutes 30</option>\n          <option value={150000}>3 minutes</option>\n          <option value={210000}>3 minutes 30</option>\n          <option value={240000}>4 minutes</option>\n          <option value={270000}>4 minutes 30</option>\n          <option value={300000}>5 minutes</option>\n        </select>\n\n        <Link\n          type=\"submit\"\n          className=\"px-5 py-3 rounded-full bg-red-500\"\n          to={`/${state.query}/${state.interval}`}\n        >\n          Start\n        </Link>\n        {/* <Search />\n        <Timer /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface Props {\n  current: number;\n}\n\nconst Progress = (props: Props) => {\n  return (\n    <div className=\"bg-gray-200 dark:bg-gray-700 rounded-full\">\n      <motion.div\n        animate={{ width: `${props.current}%` }}\n        transition={{ type: \"tween\" }}\n        className=\"transition duration-500 ease-in-out bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 h-1 rounded-full\"\n      ></motion.div>\n    </div>\n  );\n};\n\nexport default Progress;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface Props {\n  children: React.ReactNode;\n  onClick?: () => void;\n}\n\nconst Button = (props: Props) => {\n  return (\n    <motion.button\n      className=\"h-12 w-12 rounded-full hover:bg-red-500 focus:bg-red-900 bg-gray-700 border border-gray-600 text-white\"\n      style={{ transition: \"all .15s ease\" }}\n      type=\"button\"\n      whileTap={{ scale: 1.2 }}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </motion.button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useContext } from \"react\";\n\nimport { GlobalContext } from \"../GlobalContext\";\n\nimport Countdown from \"react-countdown\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faArrowCircleRight,\n  faStopwatch,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nimport Progress from \"./Progress\";\nimport Button from \"./Button\";\n\ninterface Props {\n  total: any;\n  hours: any;\n  minutes: any;\n  seconds: any;\n  completed: any;\n  api: any;\n}\n\ninterface SwitcherType {\n  duration: number | 3000;\n}\n\nconst Switcher = (props: SwitcherType) => {\n  const [state] = useContext(GlobalContext);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Switch to next image\n  function handleNext() {\n    if (currentIndex === state.length) {\n      alert(\"You reach the end\");\n    } else setCurrentIndex(currentIndex + 1);\n  }\n\n  // Switch to previous image\n  function handlePrevious() {\n    if (currentIndex === 0) {\n      alert(\"Stop\");\n    } else setCurrentIndex(currentIndex - 1);\n  }\n\n  const renderer = ({ total, minutes, seconds, completed, api }: Props) => {\n    if (completed) {\n      handleNext();\n      api.start();\n      return \"Next\";\n    } else {\n      return (\n        <span className=\"text-lg text-white font-bold bg-gray-900 px-9 py-2 rounded-full\">\n          <FontAwesomeIcon icon={faStopwatch} />\n          {minutes === 0 ? \"\" : minutes + \" min\"}{\" \"}\n          {seconds === 0 ? \"\" : seconds + \" s\"}\n        </span>\n      );\n    }\n  };\n\n  const progress = ({ total, completed, api }: Props) => {\n    if (completed) {\n      api.start();\n      return \"Next\";\n    }\n    return <Progress current={(total * 100) / props.duration} />;\n  };\n\n  return (\n    <div className=\" flex-grow h-36 relative bg-gradient-to-t from-gray-900 to-gray-800\">\n      <AnimatePresence>\n        <motion.img\n          className=\"w-full h-full object-contain\"\n          key={state[currentIndex]}\n          src={state[currentIndex]}\n          alt=\"Sketch image\"\n          initial={{ opacity: 0, x: 300, overflow: \"hidden\" }}\n          animate={{ opacity: 1, x: 0, overflow: \"hidden\" }}\n          exit={{ opacity: 0, x: -300, overflow: \"hidden\" }}\n          transition={{ type: \"tween\" }}\n        />\n      </AnimatePresence>\n\n      <div className=\" w-full flex justify-center mt-5 absolute bottom-5\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"bg-white bg-opacity-90 h-36 max-w-lg mx-auto border border-gray-200 rounded-xl w-xl dark:bg-gray-800 dark:border-gray-600 shadow-xl\">\n            <div className=\"bg-dark-darkest border-b border-gray-600 rounded-t-xl h-8 flex justify-center items-center\">\n              <span className=\"mb-1 dark:text-white text-xs\">\n                <strong className=\"text-red-500\">{currentIndex}</strong> /{\" \"}\n                {state.length}\n              </span>\n            </div>\n            <div className=\"flex justify-between  items-center p-5 \">\n              <Button onClick={handlePrevious}>\n                <FontAwesomeIcon icon={faArrowCircleLeft} />\n              </Button>\n              <div className=\"flex flex-col items-center\">\n                <Countdown\n                  date={Date.now() + props.duration}\n                  renderer={renderer}\n                  autoStart={true}\n                />\n              </div>\n              <Button onClick={handleNext}>\n                <FontAwesomeIcon icon={faArrowCircleRight} />\n              </Button>\n            </div>\n            <Countdown\n              date={Date.now() + props.duration}\n              renderer={progress}\n              autoStart={true}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Switcher;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  query: string;\n}\n\nconst Header = (props: Props) => {\n  return (\n    <header className=\"flex-none h-16 border-b dark:bg-gray-800 dark:border-gray-800\">\n      <div className=\"container m-auto px-5 h-full\">\n        <nav className=\"flex items-center justify-between px-2 py-3 navbar-expand-lg h-full\">\n          <div>\n            <Link to=\"/\" className=\"text-xl font-cursive text-red-500 \">\n              Driwtch\n            </Link>\n          </div>\n\n          <div>\n            <strong className=\"capitalize dark:text-white\">\n              {props.query}\n            </strong>\n          </div>\n\n          <div className=\"flex justify-between dark:text-white\">\n            <Link to=\"/\">GitHub</Link>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\ninterface Props {}\n\nconst Footer = (props: Props) => {\n  return (\n    <footer className=\"bg-gray-900 flex-none flex justify-center items-center text-center h-16 z-10\">\n      <p className=\"text-sm dark:text-white\">\n        &copy; Copyright {new Date().getFullYear()}, Developped by Olivier\n        Chemla\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport Switcher from \"../components/Switcher\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFan } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { motion } from \"framer-motion\";\n\ninterface Props {}\n\nconst Starter = (props: Props) => {\n  let { query, duration }: any = useParams();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState<any | null>(null);\n  const [state, setState] = useState(\"\");\n\n  // Data is stored inside Global context\n  const [data, setData] = useContext(GlobalContext);\n\n  useEffect(() => {\n    fetch(`https://driwtch.herokuapp.com/search/?searchquery=${query}`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setData(result);\n        },\n        // Remarque : il faut gérer les erreurs ici plutôt que dans\n        // un bloc catch() afin que nous n’avalions pas les exceptions\n        // dues à de véritables bugs dans les composants.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Erreur : {error.message}</div>;\n  } else if (!isLoaded) {\n    return (\n      <div className=\"flex flex-col h-screen\">\n        <Header query={query} />\n        <div className=\"flex flex-col justify-center items-center flex-grow\">\n          <motion.div\n            animate={{\n              scale: [1, 1.1, 1.1, 1, 1],\n              rotate: [0, 0, 270, 270, 0],\n            }}\n            transition={{ repeat: Infinity, duration: 2 }}\n          >\n            <FontAwesomeIcon className=\"text-red-500\" icon={faFan} size=\"5x\" />\n          </motion.div>\n\n          <span className=\"text-center text-xl font-bold dark:text-white\">\n            Un moment s'il te plait, je recherche des images de{\" \"}\n            <strong className=\"capitalize text-red-600\">{query}</strong>\n          </span>\n        </div>\n        <Footer />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"flex flex-col h-screen overflow-hidden\">\n        <Header query={query} />\n        <Switcher duration={parseInt(duration)} />\n        <Footer />\n      </div>\n    );\n  }\n};\n\nexport default Starter;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { GlobalProvider } from \"./GlobalContext\";\n\nimport Home from \"./pages/Home\";\nimport Starter from \"./pages/Starter\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"h-screen dark:bg-dark\">\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/:query/:duration\">\n              <Starter />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}